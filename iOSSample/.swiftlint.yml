disabled_rules: # rule identifiers to exclude from running
  - colon # exaclty one space after the : >>> let abc: Void\n
  - control_statement # no rounded brackets around conditions. we would need this the other way around
  - todo # TODO can be written in the code but should be linked to a ticket on JIRA.
  - nesting # func nesting max 1 level
  - opening_brace # Sometimes needn't use brace at all
  - variable_name
  - type_name
  - trailing_whitespace
  - large_tuple
  - multiple_closures_with_trailing_closure
  - incomplete_if

excluded: # paths to ignore during linting. overridden by `included`.
  - Carthage
  - Pods
  - External
  - Submodules
  - iOSSampleTests
  - iOSSampleUITests
  - ServiceKit/AWS/API
  - ServiceKitTests
  
# rule parameters
cyclomatic_complexity:
  - 20 #warning
  - 35 #error

file_length:
  - 800 #warning
  - 1000 #error

function_body_length:
  - 60 #warning
  - 80 #error

line_length:
  - 300 #warning
  - 350 #error

type_body_length:
  - 400 #warning
  - 500 #error

function_parameter_count:
  - 8  #warning
  - 10 #error

opt_in_rules:
  - force_unwrapping
  - vertical_whitespace

custom_rules:
  unnecessary_datatype:
    name: "Unnecessary Datatype"
    regex: '(?m-s)(let|var).*(:\s\[+(\w|:| |\t)+\]+\s*=\s*\[:*\])'
    message: "Unnecessary datatype. Use '= [DataType]()' instead of ': [DataType] = []'"
    severity: warning
  empty_commented_line:
    name: "Empty Commented Out Line"
    regex: "(\t+| +)//\n"
    message: "Remove useless comment lines or use /* format */"
    severity: warning
  comments_space:
    name: "Space After Comment"
    regex: '(^ *//\w+)'
    message: "There should be a space after //"
    severity: warning
  empty_first_line:
    name: "Empty First Line"
    regex: '(^[ a-zA-Z ]*(?:protocol|extension|class|struct) (?!(?:var|let))[ a-zA-Z:]*\{\n *\S+)'
    message: "There should be an empty line after a declaration"
    severity: warning
  empty_line_after_super:
    name: "Empty Line After Super"
    regex: '(^ *super\.[ a-zA-Z0-9=?.\(\)\{\}:,><!]*\n *(?!(?:\}|return))\S+)'
    message: "There should be an empty line after super"
    severity: warning
  multiple_empty_lines:
    name: "Multiple Empty Lines"
    regex: '((?:\s*\n){3,})'
    message: "There are too many empty lines"
    severity: warning
  unnecessary_leading_void_in:
    name: "Unnecessary -> Void in at the end of the line"
    regex: '(-> (Void|\(\)) in$)'
    message: "Unnecessary '-> Void in' at the end of the line. Use only 'in'"
    severity: warning
  unnecessary_type:
    name: "Unnecessary Type"
    regex: '(?sm)[ \ta-zA-Z0-9]?(?:let|var){1} [ \ta-zA-Z0-9]+?:[ \t]+?([a-zA-Z0-9]+?)[\t ]+?=[\t ]?\1'
    message: "Type Definition Not Needed"
    severity: warning
  empty_closure_params:
    name: "Empty closure params"
    regex: '\{ (\(\) -> Void in)$'
    message: "`() -> Void in` should be avoided"
    severity: warning
  incomplete_if:
    name: "Incomplete if"
    regex: '(^ *if \(((?!( is | > | < | (=|!|<|>)= )).)*\) \{)'
    message: "if should contain == true or == false"
    severity: warning
  invalid_mark_format:
    name: "Invalid MARK Format"
    regex: '(?m-s)(\/\/[\s]*?MARK(?!(\:[\s]{1}\-[\s]{1}){1}))'
    message: "Use format: MARK: - Your Info"
    severity: warning
